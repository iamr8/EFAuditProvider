// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using R8.EventSourcing.PostgreSQL.Tests.Entities;

#nullable disable

namespace R8.EventSourcing.PostgreSQL.Tests.Migrations
{
    [DbContext(typeof(DummyDbContext))]
    [Migration("20230607155706_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("R8.EventSourcing.PostgreSQL.Tests.Entities.FirstEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<int>>("ArrayOfIntegers")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<JsonDocument>("Audits")
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FirstEntities");
                });

            modelBuilder.Entity("R8.EventSourcing.PostgreSQL.Tests.Entities.SecondEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("ArrayOfStrings")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<JsonDocument>("Audits")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FirstEntityId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FirstEntityId");

                    b.ToTable("SecondEntities");
                });

            modelBuilder.Entity("R8.EventSourcing.PostgreSQL.Tests.Entities.ThirdEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ThirdEntities");
                });

            modelBuilder.Entity("R8.EventSourcing.PostgreSQL.Tests.Entities.SecondEntity", b =>
                {
                    b.HasOne("R8.EventSourcing.PostgreSQL.Tests.Entities.FirstEntity", "FirstEntity")
                        .WithMany("SecondEntities")
                        .HasForeignKey("FirstEntityId");

                    b.Navigation("FirstEntity");
                });

            modelBuilder.Entity("R8.EventSourcing.PostgreSQL.Tests.Entities.FirstEntity", b =>
                {
                    b.Navigation("SecondEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
