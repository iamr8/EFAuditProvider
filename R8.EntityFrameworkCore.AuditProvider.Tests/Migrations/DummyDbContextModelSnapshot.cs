// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using R8.EntityFrameworkCore.AuditProvider.Tests.Entities;

#nullable disable

namespace R8.EntityFrameworkCore.AuditProvider.Tests.Migrations
{
    [DbContext(typeof(DummyDbContext))]
    partial class DummyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("R8.EntityFrameworkCore.AuditProvider.Tests.Entities.MyAuditableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double[]>("ArrayOfDoubles")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.Property<JsonDocument>("Audits")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateOffset")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<List<int>>("ListOfIntegers")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<List<string>>("ListOfStrings")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int?>("MyAuditableEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("NullableInt")
                        .HasColumnType("integer");

                    b.Property<List<long>>("NullableListOfLongs")
                        .HasColumnType("bigint[]");

                    b.Property<JsonDocument>("Payload")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("MyAuditableEntityId");

                    b.ToTable("MyAuditableEntities");
                });

            modelBuilder.Entity("R8.EntityFrameworkCore.AuditProvider.Tests.Entities.MyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MyAuditableEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MyAuditableEntityId");

                    b.ToTable("MyEntities");
                });

            modelBuilder.Entity("R8.EntityFrameworkCore.AuditProvider.Tests.Entities.MyAuditableEntity", b =>
                {
                    b.HasOne("R8.EntityFrameworkCore.AuditProvider.Tests.Entities.MyAuditableEntity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("MyAuditableEntityId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("R8.EntityFrameworkCore.AuditProvider.Tests.Entities.MyEntity", b =>
                {
                    b.HasOne("R8.EntityFrameworkCore.AuditProvider.Tests.Entities.MyAuditableEntity", "MyAuditableEntity")
                        .WithMany("MyEntities")
                        .HasForeignKey("MyAuditableEntityId");

                    b.Navigation("MyAuditableEntity");
                });

            modelBuilder.Entity("R8.EntityFrameworkCore.AuditProvider.Tests.Entities.MyAuditableEntity", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("MyEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
